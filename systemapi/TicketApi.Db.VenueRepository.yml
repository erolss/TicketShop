### YamlMime:ManagedReference
items:
- uid: TicketApi.Db.VenueRepository
  commentId: T:TicketApi.Db.VenueRepository
  id: VenueRepository
  parent: TicketApi.Db
  children:
  - TicketApi.Db.VenueRepository.#ctor(System.String)
  - TicketApi.Db.VenueRepository.AddVenue(TicketApi.Db.Models.Venue)
  - TicketApi.Db.VenueRepository.DeleteVenue(System.Int32)
  - TicketApi.Db.VenueRepository.FindVenues(System.String)
  - TicketApi.Db.VenueRepository.GetVenueById(System.Int32)
  - TicketApi.Db.VenueRepository.GetVenues(System.Int32,System.Int32)
  - TicketApi.Db.VenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
  langs:
  - csharp
  - vb
  name: VenueRepository
  nameWithType: VenueRepository
  fullName: TicketApi.Db.VenueRepository
  type: Class
  source:
    remote:
      path: src/DbRepository/VenueRepository.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: VenueRepository
    path: src/DbRepository/VenueRepository.cs
    startLine: 14
  assemblies:
  - DbRepository
  namespace: TicketApi.Db
  syntax:
    content: 'public class VenueRepository : IVenueRepository'
    content.vb: >-
      Public Class VenueRepository
          Implements IVenueRepository
  inheritance:
  - System.Object
  implements:
  - TicketApi.Db.Interface.IVenueRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketApi.Db.VenueRepository.#ctor(System.String)
  commentId: M:TicketApi.Db.VenueRepository.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TicketApi.Db.VenueRepository
  langs:
  - csharp
  - vb
  name: VenueRepository(String)
  nameWithType: VenueRepository.VenueRepository(String)
  fullName: TicketApi.Db.VenueRepository.VenueRepository(System.String)
  type: Constructor
  source:
    remote:
      path: src/DbRepository/VenueRepository.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: .ctor
    path: src/DbRepository/VenueRepository.cs
    startLine: 18
  assemblies:
  - DbRepository
  namespace: TicketApi.Db
  syntax:
    content: public VenueRepository(string connectionString)
    parameters:
    - id: connectionString
      type: System.String
    content.vb: Public Sub New(connectionString As String)
  overload: TicketApi.Db.VenueRepository.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketApi.Db.VenueRepository.AddVenue(TicketApi.Db.Models.Venue)
  commentId: M:TicketApi.Db.VenueRepository.AddVenue(TicketApi.Db.Models.Venue)
  id: AddVenue(TicketApi.Db.Models.Venue)
  parent: TicketApi.Db.VenueRepository
  langs:
  - csharp
  - vb
  name: AddVenue(Venue)
  nameWithType: VenueRepository.AddVenue(Venue)
  fullName: TicketApi.Db.VenueRepository.AddVenue(TicketApi.Db.Models.Venue)
  type: Method
  source:
    remote:
      path: src/DbRepository/VenueRepository.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: AddVenue
    path: src/DbRepository/VenueRepository.cs
    startLine: 22
  assemblies:
  - DbRepository
  namespace: TicketApi.Db
  syntax:
    content: public Venue AddVenue(Venue venue)
    parameters:
    - id: venue
      type: TicketApi.Db.Models.Venue
    return:
      type: TicketApi.Db.Models.Venue
    content.vb: Public Function AddVenue(venue As Venue) As Venue
  overload: TicketApi.Db.VenueRepository.AddVenue*
  implements:
  - TicketApi.Db.Interface.IVenueRepository.AddVenue(TicketApi.Db.Models.Venue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketApi.Db.VenueRepository.DeleteVenue(System.Int32)
  commentId: M:TicketApi.Db.VenueRepository.DeleteVenue(System.Int32)
  id: DeleteVenue(System.Int32)
  parent: TicketApi.Db.VenueRepository
  langs:
  - csharp
  - vb
  name: DeleteVenue(Int32)
  nameWithType: VenueRepository.DeleteVenue(Int32)
  fullName: TicketApi.Db.VenueRepository.DeleteVenue(System.Int32)
  type: Method
  source:
    remote:
      path: src/DbRepository/VenueRepository.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: DeleteVenue
    path: src/DbRepository/VenueRepository.cs
    startLine: 44
  assemblies:
  - DbRepository
  namespace: TicketApi.Db
  syntax:
    content: public bool DeleteVenue(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function DeleteVenue(id As Integer) As Boolean
  overload: TicketApi.Db.VenueRepository.DeleteVenue*
  implements:
  - TicketApi.Db.Interface.IVenueRepository.DeleteVenue(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketApi.Db.VenueRepository.GetVenueById(System.Int32)
  commentId: M:TicketApi.Db.VenueRepository.GetVenueById(System.Int32)
  id: GetVenueById(System.Int32)
  parent: TicketApi.Db.VenueRepository
  langs:
  - csharp
  - vb
  name: GetVenueById(Int32)
  nameWithType: VenueRepository.GetVenueById(Int32)
  fullName: TicketApi.Db.VenueRepository.GetVenueById(System.Int32)
  type: Method
  source:
    remote:
      path: src/DbRepository/VenueRepository.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetVenueById
    path: src/DbRepository/VenueRepository.cs
    startLine: 61
  assemblies:
  - DbRepository
  namespace: TicketApi.Db
  syntax:
    content: public Venue GetVenueById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: TicketApi.Db.Models.Venue
    content.vb: Public Function GetVenueById(id As Integer) As Venue
  overload: TicketApi.Db.VenueRepository.GetVenueById*
  implements:
  - TicketApi.Db.Interface.IVenueRepository.GetVenueById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketApi.Db.VenueRepository.GetVenues(System.Int32,System.Int32)
  commentId: M:TicketApi.Db.VenueRepository.GetVenues(System.Int32,System.Int32)
  id: GetVenues(System.Int32,System.Int32)
  parent: TicketApi.Db.VenueRepository
  langs:
  - csharp
  - vb
  name: GetVenues(Int32, Int32)
  nameWithType: VenueRepository.GetVenues(Int32, Int32)
  fullName: TicketApi.Db.VenueRepository.GetVenues(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DbRepository/VenueRepository.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetVenues
    path: src/DbRepository/VenueRepository.cs
    startLine: 77
  assemblies:
  - DbRepository
  namespace: TicketApi.Db
  syntax:
    content: public List<Venue> GetVenues(int offset = 0, int maxLimit = 20)
    parameters:
    - id: offset
      type: System.Int32
    - id: maxLimit
      type: System.Int32
    return:
      type: System.Collections.Generic.List{TicketApi.Db.Models.Venue}
    content.vb: Public Function GetVenues(offset As Integer = 0, maxLimit As Integer = 20) As List(Of Venue)
  overload: TicketApi.Db.VenueRepository.GetVenues*
  implements:
  - TicketApi.Db.Interface.IVenueRepository.GetVenues(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketApi.Db.VenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
  commentId: M:TicketApi.Db.VenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
  id: UpdateVenue(TicketApi.Db.Models.Venue)
  parent: TicketApi.Db.VenueRepository
  langs:
  - csharp
  - vb
  name: UpdateVenue(Venue)
  nameWithType: VenueRepository.UpdateVenue(Venue)
  fullName: TicketApi.Db.VenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
  type: Method
  source:
    remote:
      path: src/DbRepository/VenueRepository.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: UpdateVenue
    path: src/DbRepository/VenueRepository.cs
    startLine: 100
  assemblies:
  - DbRepository
  namespace: TicketApi.Db
  syntax:
    content: public Venue UpdateVenue(Venue venue)
    parameters:
    - id: venue
      type: TicketApi.Db.Models.Venue
    return:
      type: TicketApi.Db.Models.Venue
    content.vb: Public Function UpdateVenue(venue As Venue) As Venue
  overload: TicketApi.Db.VenueRepository.UpdateVenue*
  implements:
  - TicketApi.Db.Interface.IVenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketApi.Db.VenueRepository.FindVenues(System.String)
  commentId: M:TicketApi.Db.VenueRepository.FindVenues(System.String)
  id: FindVenues(System.String)
  parent: TicketApi.Db.VenueRepository
  langs:
  - csharp
  - vb
  name: FindVenues(String)
  nameWithType: VenueRepository.FindVenues(String)
  fullName: TicketApi.Db.VenueRepository.FindVenues(System.String)
  type: Method
  source:
    remote:
      path: src/DbRepository/VenueRepository.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: FindVenues
    path: src/DbRepository/VenueRepository.cs
    startLine: 123
  assemblies:
  - DbRepository
  namespace: TicketApi.Db
  syntax:
    content: public List<Venue> FindVenues(string searchStr)
    parameters:
    - id: searchStr
      type: System.String
    return:
      type: System.Collections.Generic.List{TicketApi.Db.Models.Venue}
    content.vb: Public Function FindVenues(searchStr As String) As List(Of Venue)
  overload: TicketApi.Db.VenueRepository.FindVenues*
  implements:
  - TicketApi.Db.Interface.IVenueRepository.FindVenues(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TicketApi.Db
  commentId: N:TicketApi.Db
  isExternal: false
  name: TicketApi.Db
  nameWithType: TicketApi.Db
  fullName: TicketApi.Db
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TicketApi.Db.Interface.IVenueRepository
  commentId: T:TicketApi.Db.Interface.IVenueRepository
  parent: TicketApi.Db.Interface
  isExternal: false
  name: IVenueRepository
  nameWithType: IVenueRepository
  fullName: TicketApi.Db.Interface.IVenueRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketApi.Db.Interface
  commentId: N:TicketApi.Db.Interface
  isExternal: false
  name: TicketApi.Db.Interface
  nameWithType: TicketApi.Db.Interface
  fullName: TicketApi.Db.Interface
- uid: TicketApi.Db.VenueRepository.#ctor*
  commentId: Overload:TicketApi.Db.VenueRepository.#ctor
  isExternal: false
  name: VenueRepository
  nameWithType: VenueRepository.VenueRepository
  fullName: TicketApi.Db.VenueRepository.VenueRepository
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketApi.Db.VenueRepository.AddVenue*
  commentId: Overload:TicketApi.Db.VenueRepository.AddVenue
  isExternal: false
  name: AddVenue
  nameWithType: VenueRepository.AddVenue
  fullName: TicketApi.Db.VenueRepository.AddVenue
- uid: TicketApi.Db.Interface.IVenueRepository.AddVenue(TicketApi.Db.Models.Venue)
  commentId: M:TicketApi.Db.Interface.IVenueRepository.AddVenue(TicketApi.Db.Models.Venue)
  parent: TicketApi.Db.Interface.IVenueRepository
  isExternal: false
  name: AddVenue(Venue)
  nameWithType: IVenueRepository.AddVenue(Venue)
  fullName: TicketApi.Db.Interface.IVenueRepository.AddVenue(TicketApi.Db.Models.Venue)
  spec.csharp:
  - uid: TicketApi.Db.Interface.IVenueRepository.AddVenue(TicketApi.Db.Models.Venue)
    name: AddVenue
    nameWithType: IVenueRepository.AddVenue
    fullName: TicketApi.Db.Interface.IVenueRepository.AddVenue
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketApi.Db.Models.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketApi.Db.Models.Venue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketApi.Db.Interface.IVenueRepository.AddVenue(TicketApi.Db.Models.Venue)
    name: AddVenue
    nameWithType: IVenueRepository.AddVenue
    fullName: TicketApi.Db.Interface.IVenueRepository.AddVenue
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketApi.Db.Models.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketApi.Db.Models.Venue
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Db.Models.Venue
  commentId: T:TicketApi.Db.Models.Venue
  parent: TicketApi.Db.Models
  isExternal: false
  name: Venue
  nameWithType: Venue
  fullName: TicketApi.Db.Models.Venue
- uid: TicketApi.Db.Models
  commentId: N:TicketApi.Db.Models
  isExternal: false
  name: TicketApi.Db.Models
  nameWithType: TicketApi.Db.Models
  fullName: TicketApi.Db.Models
- uid: TicketApi.Db.VenueRepository.DeleteVenue*
  commentId: Overload:TicketApi.Db.VenueRepository.DeleteVenue
  isExternal: false
  name: DeleteVenue
  nameWithType: VenueRepository.DeleteVenue
  fullName: TicketApi.Db.VenueRepository.DeleteVenue
- uid: TicketApi.Db.Interface.IVenueRepository.DeleteVenue(System.Int32)
  commentId: M:TicketApi.Db.Interface.IVenueRepository.DeleteVenue(System.Int32)
  parent: TicketApi.Db.Interface.IVenueRepository
  isExternal: true
  name: DeleteVenue(Int32)
  nameWithType: IVenueRepository.DeleteVenue(Int32)
  fullName: TicketApi.Db.Interface.IVenueRepository.DeleteVenue(System.Int32)
  spec.csharp:
  - uid: TicketApi.Db.Interface.IVenueRepository.DeleteVenue(System.Int32)
    name: DeleteVenue
    nameWithType: IVenueRepository.DeleteVenue
    fullName: TicketApi.Db.Interface.IVenueRepository.DeleteVenue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketApi.Db.Interface.IVenueRepository.DeleteVenue(System.Int32)
    name: DeleteVenue
    nameWithType: IVenueRepository.DeleteVenue
    fullName: TicketApi.Db.Interface.IVenueRepository.DeleteVenue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TicketApi.Db.VenueRepository.GetVenueById*
  commentId: Overload:TicketApi.Db.VenueRepository.GetVenueById
  isExternal: false
  name: GetVenueById
  nameWithType: VenueRepository.GetVenueById
  fullName: TicketApi.Db.VenueRepository.GetVenueById
- uid: TicketApi.Db.Interface.IVenueRepository.GetVenueById(System.Int32)
  commentId: M:TicketApi.Db.Interface.IVenueRepository.GetVenueById(System.Int32)
  parent: TicketApi.Db.Interface.IVenueRepository
  isExternal: true
  name: GetVenueById(Int32)
  nameWithType: IVenueRepository.GetVenueById(Int32)
  fullName: TicketApi.Db.Interface.IVenueRepository.GetVenueById(System.Int32)
  spec.csharp:
  - uid: TicketApi.Db.Interface.IVenueRepository.GetVenueById(System.Int32)
    name: GetVenueById
    nameWithType: IVenueRepository.GetVenueById
    fullName: TicketApi.Db.Interface.IVenueRepository.GetVenueById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketApi.Db.Interface.IVenueRepository.GetVenueById(System.Int32)
    name: GetVenueById
    nameWithType: IVenueRepository.GetVenueById
    fullName: TicketApi.Db.Interface.IVenueRepository.GetVenueById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Db.VenueRepository.GetVenues*
  commentId: Overload:TicketApi.Db.VenueRepository.GetVenues
  isExternal: false
  name: GetVenues
  nameWithType: VenueRepository.GetVenues
  fullName: TicketApi.Db.VenueRepository.GetVenues
- uid: TicketApi.Db.Interface.IVenueRepository.GetVenues(System.Int32,System.Int32)
  commentId: M:TicketApi.Db.Interface.IVenueRepository.GetVenues(System.Int32,System.Int32)
  parent: TicketApi.Db.Interface.IVenueRepository
  isExternal: true
  name: GetVenues(Int32, Int32)
  nameWithType: IVenueRepository.GetVenues(Int32, Int32)
  fullName: TicketApi.Db.Interface.IVenueRepository.GetVenues(System.Int32, System.Int32)
  spec.csharp:
  - uid: TicketApi.Db.Interface.IVenueRepository.GetVenues(System.Int32,System.Int32)
    name: GetVenues
    nameWithType: IVenueRepository.GetVenues
    fullName: TicketApi.Db.Interface.IVenueRepository.GetVenues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketApi.Db.Interface.IVenueRepository.GetVenues(System.Int32,System.Int32)
    name: GetVenues
    nameWithType: IVenueRepository.GetVenues
    fullName: TicketApi.Db.Interface.IVenueRepository.GetVenues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{TicketApi.Db.Models.Venue}
  commentId: T:System.Collections.Generic.List{TicketApi.Db.Models.Venue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Venue>
  nameWithType: List<Venue>
  fullName: System.Collections.Generic.List<TicketApi.Db.Models.Venue>
  nameWithType.vb: List(Of Venue)
  fullName.vb: System.Collections.Generic.List(Of TicketApi.Db.Models.Venue)
  name.vb: List(Of Venue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketApi.Db.Models.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketApi.Db.Models.Venue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketApi.Db.Models.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketApi.Db.Models.Venue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TicketApi.Db.VenueRepository.UpdateVenue*
  commentId: Overload:TicketApi.Db.VenueRepository.UpdateVenue
  isExternal: false
  name: UpdateVenue
  nameWithType: VenueRepository.UpdateVenue
  fullName: TicketApi.Db.VenueRepository.UpdateVenue
- uid: TicketApi.Db.Interface.IVenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
  commentId: M:TicketApi.Db.Interface.IVenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
  parent: TicketApi.Db.Interface.IVenueRepository
  isExternal: false
  name: UpdateVenue(Venue)
  nameWithType: IVenueRepository.UpdateVenue(Venue)
  fullName: TicketApi.Db.Interface.IVenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
  spec.csharp:
  - uid: TicketApi.Db.Interface.IVenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
    name: UpdateVenue
    nameWithType: IVenueRepository.UpdateVenue
    fullName: TicketApi.Db.Interface.IVenueRepository.UpdateVenue
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketApi.Db.Models.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketApi.Db.Models.Venue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketApi.Db.Interface.IVenueRepository.UpdateVenue(TicketApi.Db.Models.Venue)
    name: UpdateVenue
    nameWithType: IVenueRepository.UpdateVenue
    fullName: TicketApi.Db.Interface.IVenueRepository.UpdateVenue
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketApi.Db.Models.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketApi.Db.Models.Venue
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Db.VenueRepository.FindVenues*
  commentId: Overload:TicketApi.Db.VenueRepository.FindVenues
  isExternal: false
  name: FindVenues
  nameWithType: VenueRepository.FindVenues
  fullName: TicketApi.Db.VenueRepository.FindVenues
- uid: TicketApi.Db.Interface.IVenueRepository.FindVenues(System.String)
  commentId: M:TicketApi.Db.Interface.IVenueRepository.FindVenues(System.String)
  parent: TicketApi.Db.Interface.IVenueRepository
  isExternal: true
  name: FindVenues(String)
  nameWithType: IVenueRepository.FindVenues(String)
  fullName: TicketApi.Db.Interface.IVenueRepository.FindVenues(System.String)
  spec.csharp:
  - uid: TicketApi.Db.Interface.IVenueRepository.FindVenues(System.String)
    name: FindVenues
    nameWithType: IVenueRepository.FindVenues
    fullName: TicketApi.Db.Interface.IVenueRepository.FindVenues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketApi.Db.Interface.IVenueRepository.FindVenues(System.String)
    name: FindVenues
    nameWithType: IVenueRepository.FindVenues
    fullName: TicketApi.Db.Interface.IVenueRepository.FindVenues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
