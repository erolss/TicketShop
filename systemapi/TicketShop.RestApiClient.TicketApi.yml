### YamlMime:ManagedReference
items:
- uid: TicketShop.RestApiClient.TicketApi
  commentId: T:TicketShop.RestApiClient.TicketApi
  id: TicketApi
  parent: TicketShop.RestApiClient
  children:
  - TicketShop.RestApiClient.TicketApi.#ctor(System.String)
  - TicketShop.RestApiClient.TicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
  - TicketShop.RestApiClient.TicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  - TicketShop.RestApiClient.TicketApi.DeleteTicket(System.Int32)
  - TicketShop.RestApiClient.TicketApi.GetFullTicketById(System.Int32)
  - TicketShop.RestApiClient.TicketApi.GetFullTicketsByTransactionId(System.Int32)
  - TicketShop.RestApiClient.TicketApi.GetTicketById(System.Int32)
  - TicketShop.RestApiClient.TicketApi.GetTickets(System.Int32,System.Int32)
  - TicketShop.RestApiClient.TicketApi.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  - TicketShop.RestApiClient.TicketApi.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  - TicketShop.RestApiClient.TicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  langs:
  - csharp
  - vb
  name: TicketApi
  nameWithType: TicketApi
  fullName: TicketShop.RestApiClient.TicketApi
  type: Class
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: TicketApi
    path: src/RestApiClient/TicketApi.cs
    startLine: 8
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: 'public class TicketApi : ITicketApi'
    content.vb: >-
      Public Class TicketApi

          Implements ITicketApi
  inheritance:
  - System.Object
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketShop.RestApiClient.TicketApi.#ctor(System.String)
  commentId: M:TicketShop.RestApiClient.TicketApi.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: TicketApi(String)
  nameWithType: TicketApi.TicketApi(String)
  fullName: TicketShop.RestApiClient.TicketApi.TicketApi(System.String)
  type: Constructor
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: .ctor
    path: src/RestApiClient/TicketApi.cs
    startLine: 12
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public TicketApi(string baseUrl)
    parameters:
    - id: baseUrl
      type: System.String
    content.vb: Public Sub New(baseUrl As String)
  overload: TicketShop.RestApiClient.TicketApi.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
  commentId: M:TicketShop.RestApiClient.TicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
  id: AddTicket(TicketShop.RestApiClient.Model.Ticket)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: AddTicket(Ticket)
  nameWithType: TicketApi.AddTicket(Ticket)
  fullName: TicketShop.RestApiClient.TicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: AddTicket
    path: src/RestApiClient/TicketApi.cs
    startLine: 16
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public Ticket AddTicket(Ticket ticket)
    parameters:
    - id: ticket
      type: TicketShop.RestApiClient.Model.Ticket
    return:
      type: TicketShop.RestApiClient.Model.Ticket
    content.vb: Public Function AddTicket(ticket As Ticket) As Ticket
  overload: TicketShop.RestApiClient.TicketApi.AddTicket*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  commentId: M:TicketShop.RestApiClient.TicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  id: AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: AddTicketOrder(Ticket)
  nameWithType: TicketApi.AddTicketOrder(Ticket)
  fullName: TicketShop.RestApiClient.TicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: AddTicketOrder
    path: src/RestApiClient/TicketApi.cs
    startLine: 28
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public Ticket AddTicketOrder(Ticket ticket)
    parameters:
    - id: ticket
      type: TicketShop.RestApiClient.Model.Ticket
    return:
      type: TicketShop.RestApiClient.Model.Ticket
    content.vb: Public Function AddTicketOrder(ticket As Ticket) As Ticket
  overload: TicketShop.RestApiClient.TicketApi.AddTicketOrder*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.DeleteTicket(System.Int32)
  commentId: M:TicketShop.RestApiClient.TicketApi.DeleteTicket(System.Int32)
  id: DeleteTicket(System.Int32)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: DeleteTicket(Int32)
  nameWithType: TicketApi.DeleteTicket(Int32)
  fullName: TicketShop.RestApiClient.TicketApi.DeleteTicket(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: DeleteTicket
    path: src/RestApiClient/TicketApi.cs
    startLine: 41
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public bool DeleteTicket(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function DeleteTicket(ticketId As Integer) As Boolean
  overload: TicketShop.RestApiClient.TicketApi.DeleteTicket*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.DeleteTicket(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.GetFullTicketById(System.Int32)
  commentId: M:TicketShop.RestApiClient.TicketApi.GetFullTicketById(System.Int32)
  id: GetFullTicketById(System.Int32)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: GetFullTicketById(Int32)
  nameWithType: TicketApi.GetFullTicketById(Int32)
  fullName: TicketShop.RestApiClient.TicketApi.GetFullTicketById(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetFullTicketById
    path: src/RestApiClient/TicketApi.cs
    startLine: 58
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public FullTicket GetFullTicketById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: TicketShop.RestApiClient.Model.FullTicket
    content.vb: Public Function GetFullTicketById(id As Integer) As FullTicket
  overload: TicketShop.RestApiClient.TicketApi.GetFullTicketById*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.GetFullTicketsByTransactionId(System.Int32)
  commentId: M:TicketShop.RestApiClient.TicketApi.GetFullTicketsByTransactionId(System.Int32)
  id: GetFullTicketsByTransactionId(System.Int32)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: GetFullTicketsByTransactionId(Int32)
  nameWithType: TicketApi.GetFullTicketsByTransactionId(Int32)
  fullName: TicketShop.RestApiClient.TicketApi.GetFullTicketsByTransactionId(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetFullTicketsByTransactionId
    path: src/RestApiClient/TicketApi.cs
    startLine: 74
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public List<FullTicket> GetFullTicketsByTransactionId(int transactionId)
    parameters:
    - id: transactionId
      type: System.Int32
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.FullTicket}
    content.vb: Public Function GetFullTicketsByTransactionId(transactionId As Integer) As List(Of FullTicket)
  overload: TicketShop.RestApiClient.TicketApi.GetFullTicketsByTransactionId*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketsByTransactionId(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.GetTicketById(System.Int32)
  commentId: M:TicketShop.RestApiClient.TicketApi.GetTicketById(System.Int32)
  id: GetTicketById(System.Int32)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: GetTicketById(Int32)
  nameWithType: TicketApi.GetTicketById(Int32)
  fullName: TicketShop.RestApiClient.TicketApi.GetTicketById(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetTicketById
    path: src/RestApiClient/TicketApi.cs
    startLine: 79
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public Ticket GetTicketById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: TicketShop.RestApiClient.Model.Ticket
    content.vb: Public Function GetTicketById(id As Integer) As Ticket
  overload: TicketShop.RestApiClient.TicketApi.GetTicketById*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.GetTicketById(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.GetTickets(System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.TicketApi.GetTickets(System.Int32,System.Int32)
  id: GetTickets(System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: GetTickets(Int32, Int32)
  nameWithType: TicketApi.GetTickets(Int32, Int32)
  fullName: TicketShop.RestApiClient.TicketApi.GetTickets(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetTickets
    path: src/RestApiClient/TicketApi.cs
    startLine: 95
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public List<Ticket> GetTickets(int offset = 0, int maxLimit = 20)
    parameters:
    - id: offset
      type: System.Int32
    - id: maxLimit
      type: System.Int32
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.Ticket}
    content.vb: Public Function GetTickets(offset As Integer = 0, maxLimit As Integer = 20) As List(Of Ticket)
  overload: TicketShop.RestApiClient.TicketApi.GetTickets*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.GetTickets(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.TicketApi.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  id: GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: GetTicketsByTransactionId(Int32, Int32, Int32)
  nameWithType: TicketApi.GetTicketsByTransactionId(Int32, Int32, Int32)
  fullName: TicketShop.RestApiClient.TicketApi.GetTicketsByTransactionId(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetTicketsByTransactionId
    path: src/RestApiClient/TicketApi.cs
    startLine: 107
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public List<Ticket> GetTicketsByTransactionId(int transactionId, int offset = 0, int maxLimit = 20)
    parameters:
    - id: transactionId
      type: System.Int32
    - id: offset
      type: System.Int32
    - id: maxLimit
      type: System.Int32
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.Ticket}
    content.vb: Public Function GetTicketsByTransactionId(transactionId As Integer, offset As Integer = 0, maxLimit As Integer = 20) As List(Of Ticket)
  overload: TicketShop.RestApiClient.TicketApi.GetTicketsByTransactionId*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.TicketApi.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  id: GetTicketsByUserId(System.String,System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: GetTicketsByUserId(String, Int32, Int32)
  nameWithType: TicketApi.GetTicketsByUserId(String, Int32, Int32)
  fullName: TicketShop.RestApiClient.TicketApi.GetTicketsByUserId(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetTicketsByUserId
    path: src/RestApiClient/TicketApi.cs
    startLine: 112
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public List<Ticket> GetTicketsByUserId(string userId, int offset = 0, int maxLimit = 20)
    parameters:
    - id: userId
      type: System.String
    - id: offset
      type: System.Int32
    - id: maxLimit
      type: System.Int32
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.Ticket}
    content.vb: Public Function GetTicketsByUserId(userId As String, offset As Integer = 0, maxLimit As Integer = 20) As List(Of Ticket)
  overload: TicketShop.RestApiClient.TicketApi.GetTicketsByUserId*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShop.RestApiClient.TicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  commentId: M:TicketShop.RestApiClient.TicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  id: UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  parent: TicketShop.RestApiClient.TicketApi
  langs:
  - csharp
  - vb
  name: UpdateTicket(Ticket)
  nameWithType: TicketApi.UpdateTicket(Ticket)
  fullName: TicketShop.RestApiClient.TicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  type: Method
  source:
    remote:
      path: src/RestApiClient/TicketApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: UpdateTicket
    path: src/RestApiClient/TicketApi.cs
    startLine: 127
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient
  syntax:
    content: public Ticket UpdateTicket(Ticket ticket)
    parameters:
    - id: ticket
      type: TicketShop.RestApiClient.Model.Ticket
    return:
      type: TicketShop.RestApiClient.Model.Ticket
    content.vb: Public Function UpdateTicket(ticket As Ticket) As Ticket
  overload: TicketShop.RestApiClient.TicketApi.UpdateTicket*
  implements:
  - TicketShop.RestApiClient.Interface.ITicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TicketShop.RestApiClient
  commentId: N:TicketShop.RestApiClient
  isExternal: false
  name: TicketShop.RestApiClient
  nameWithType: TicketShop.RestApiClient
  fullName: TicketShop.RestApiClient
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TicketShop.RestApiClient.Interface.ITicketApi
  commentId: T:TicketShop.RestApiClient.Interface.ITicketApi
  parent: TicketShop.RestApiClient.Interface
  isExternal: false
  name: ITicketApi
  nameWithType: ITicketApi
  fullName: TicketShop.RestApiClient.Interface.ITicketApi
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketShop.RestApiClient.Interface
  commentId: N:TicketShop.RestApiClient.Interface
  isExternal: false
  name: TicketShop.RestApiClient.Interface
  nameWithType: TicketShop.RestApiClient.Interface
  fullName: TicketShop.RestApiClient.Interface
- uid: TicketShop.RestApiClient.TicketApi.#ctor*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.#ctor
  isExternal: false
  name: TicketApi
  nameWithType: TicketApi.TicketApi
  fullName: TicketShop.RestApiClient.TicketApi.TicketApi
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketShop.RestApiClient.TicketApi.AddTicket*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.AddTicket
  isExternal: false
  name: AddTicket
  nameWithType: TicketApi.AddTicket
  fullName: TicketShop.RestApiClient.TicketApi.AddTicket
- uid: TicketShop.RestApiClient.Interface.ITicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: false
  name: AddTicket(Ticket)
  nameWithType: ITicketApi.AddTicket(Ticket)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
    name: AddTicket
    nameWithType: ITicketApi.AddTicket
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.AddTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketShop.RestApiClient.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketShop.RestApiClient.Model.Ticket
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.AddTicket(TicketShop.RestApiClient.Model.Ticket)
    name: AddTicket
    nameWithType: ITicketApi.AddTicket
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.AddTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketShop.RestApiClient.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketShop.RestApiClient.Model.Ticket
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShop.RestApiClient.Model.Ticket
  commentId: T:TicketShop.RestApiClient.Model.Ticket
  parent: TicketShop.RestApiClient.Model
  isExternal: false
  name: Ticket
  nameWithType: Ticket
  fullName: TicketShop.RestApiClient.Model.Ticket
- uid: TicketShop.RestApiClient.Model
  commentId: N:TicketShop.RestApiClient.Model
  isExternal: false
  name: TicketShop.RestApiClient.Model
  nameWithType: TicketShop.RestApiClient.Model
  fullName: TicketShop.RestApiClient.Model
- uid: TicketShop.RestApiClient.TicketApi.AddTicketOrder*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.AddTicketOrder
  isExternal: false
  name: AddTicketOrder
  nameWithType: TicketApi.AddTicketOrder
  fullName: TicketShop.RestApiClient.TicketApi.AddTicketOrder
- uid: TicketShop.RestApiClient.Interface.ITicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: false
  name: AddTicketOrder(Ticket)
  nameWithType: ITicketApi.AddTicketOrder(Ticket)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
    name: AddTicketOrder
    nameWithType: ITicketApi.AddTicketOrder
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.AddTicketOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketShop.RestApiClient.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketShop.RestApiClient.Model.Ticket
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.AddTicketOrder(TicketShop.RestApiClient.Model.Ticket)
    name: AddTicketOrder
    nameWithType: ITicketApi.AddTicketOrder
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.AddTicketOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketShop.RestApiClient.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketShop.RestApiClient.Model.Ticket
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShop.RestApiClient.TicketApi.DeleteTicket*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.DeleteTicket
  isExternal: false
  name: DeleteTicket
  nameWithType: TicketApi.DeleteTicket
  fullName: TicketShop.RestApiClient.TicketApi.DeleteTicket
- uid: TicketShop.RestApiClient.Interface.ITicketApi.DeleteTicket(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.DeleteTicket(System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: true
  name: DeleteTicket(Int32)
  nameWithType: ITicketApi.DeleteTicket(Int32)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.DeleteTicket(System.Int32)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.DeleteTicket(System.Int32)
    name: DeleteTicket
    nameWithType: ITicketApi.DeleteTicket
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.DeleteTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.DeleteTicket(System.Int32)
    name: DeleteTicket
    nameWithType: ITicketApi.DeleteTicket
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.DeleteTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TicketShop.RestApiClient.TicketApi.GetFullTicketById*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.GetFullTicketById
  isExternal: false
  name: GetFullTicketById
  nameWithType: TicketApi.GetFullTicketById
  fullName: TicketShop.RestApiClient.TicketApi.GetFullTicketById
- uid: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketById(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketById(System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: true
  name: GetFullTicketById(Int32)
  nameWithType: ITicketApi.GetFullTicketById(Int32)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketById(System.Int32)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketById(System.Int32)
    name: GetFullTicketById
    nameWithType: ITicketApi.GetFullTicketById
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketById(System.Int32)
    name: GetFullTicketById
    nameWithType: ITicketApi.GetFullTicketById
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShop.RestApiClient.Model.FullTicket
  commentId: T:TicketShop.RestApiClient.Model.FullTicket
  parent: TicketShop.RestApiClient.Model
  isExternal: false
  name: FullTicket
  nameWithType: FullTicket
  fullName: TicketShop.RestApiClient.Model.FullTicket
- uid: TicketShop.RestApiClient.TicketApi.GetFullTicketsByTransactionId*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.GetFullTicketsByTransactionId
  isExternal: false
  name: GetFullTicketsByTransactionId
  nameWithType: TicketApi.GetFullTicketsByTransactionId
  fullName: TicketShop.RestApiClient.TicketApi.GetFullTicketsByTransactionId
- uid: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketsByTransactionId(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketsByTransactionId(System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: true
  name: GetFullTicketsByTransactionId(Int32)
  nameWithType: ITicketApi.GetFullTicketsByTransactionId(Int32)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketsByTransactionId(System.Int32)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketsByTransactionId(System.Int32)
    name: GetFullTicketsByTransactionId
    nameWithType: ITicketApi.GetFullTicketsByTransactionId
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketsByTransactionId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketsByTransactionId(System.Int32)
    name: GetFullTicketsByTransactionId
    nameWithType: ITicketApi.GetFullTicketsByTransactionId
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetFullTicketsByTransactionId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{TicketShop.RestApiClient.Model.FullTicket}
  commentId: T:System.Collections.Generic.List{TicketShop.RestApiClient.Model.FullTicket}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FullTicket>
  nameWithType: List<FullTicket>
  fullName: System.Collections.Generic.List<TicketShop.RestApiClient.Model.FullTicket>
  nameWithType.vb: List(Of FullTicket)
  fullName.vb: System.Collections.Generic.List(Of TicketShop.RestApiClient.Model.FullTicket)
  name.vb: List(Of FullTicket)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketShop.RestApiClient.Model.FullTicket
    name: FullTicket
    nameWithType: FullTicket
    fullName: TicketShop.RestApiClient.Model.FullTicket
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketShop.RestApiClient.Model.FullTicket
    name: FullTicket
    nameWithType: FullTicket
    fullName: TicketShop.RestApiClient.Model.FullTicket
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TicketShop.RestApiClient.TicketApi.GetTicketById*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.GetTicketById
  isExternal: false
  name: GetTicketById
  nameWithType: TicketApi.GetTicketById
  fullName: TicketShop.RestApiClient.TicketApi.GetTicketById
- uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketById(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.GetTicketById(System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: true
  name: GetTicketById(Int32)
  nameWithType: ITicketApi.GetTicketById(Int32)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketById(System.Int32)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketById(System.Int32)
    name: GetTicketById
    nameWithType: ITicketApi.GetTicketById
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketById(System.Int32)
    name: GetTicketById
    nameWithType: ITicketApi.GetTicketById
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShop.RestApiClient.TicketApi.GetTickets*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.GetTickets
  isExternal: false
  name: GetTickets
  nameWithType: TicketApi.GetTickets
  fullName: TicketShop.RestApiClient.TicketApi.GetTickets
- uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTickets(System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.GetTickets(System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: true
  name: GetTickets(Int32, Int32)
  nameWithType: ITicketApi.GetTickets(Int32, Int32)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTickets(System.Int32, System.Int32)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTickets(System.Int32,System.Int32)
    name: GetTickets
    nameWithType: ITicketApi.GetTickets
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTickets
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTickets(System.Int32,System.Int32)
    name: GetTickets
    nameWithType: ITicketApi.GetTickets
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTickets
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{TicketShop.RestApiClient.Model.Ticket}
  commentId: T:System.Collections.Generic.List{TicketShop.RestApiClient.Model.Ticket}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Ticket>
  nameWithType: List<Ticket>
  fullName: System.Collections.Generic.List<TicketShop.RestApiClient.Model.Ticket>
  nameWithType.vb: List(Of Ticket)
  fullName.vb: System.Collections.Generic.List(Of TicketShop.RestApiClient.Model.Ticket)
  name.vb: List(Of Ticket)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketShop.RestApiClient.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketShop.RestApiClient.Model.Ticket
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketShop.RestApiClient.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketShop.RestApiClient.Model.Ticket
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShop.RestApiClient.TicketApi.GetTicketsByTransactionId*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.GetTicketsByTransactionId
  isExternal: false
  name: GetTicketsByTransactionId
  nameWithType: TicketApi.GetTicketsByTransactionId
  fullName: TicketShop.RestApiClient.TicketApi.GetTicketsByTransactionId
- uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: true
  name: GetTicketsByTransactionId(Int32, Int32, Int32)
  nameWithType: ITicketApi.GetTicketsByTransactionId(Int32, Int32, Int32)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByTransactionId(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
    name: GetTicketsByTransactionId
    nameWithType: ITicketApi.GetTicketsByTransactionId
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByTransactionId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
    name: GetTicketsByTransactionId
    nameWithType: ITicketApi.GetTicketsByTransactionId
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByTransactionId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShop.RestApiClient.TicketApi.GetTicketsByUserId*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.GetTicketsByUserId
  isExternal: false
  name: GetTicketsByUserId
  nameWithType: TicketApi.GetTicketsByUserId
  fullName: TicketShop.RestApiClient.TicketApi.GetTicketsByUserId
- uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: true
  name: GetTicketsByUserId(String, Int32, Int32)
  nameWithType: ITicketApi.GetTicketsByUserId(String, Int32, Int32)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByUserId(System.String, System.Int32, System.Int32)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByUserId(System.String,System.Int32,System.Int32)
    name: GetTicketsByUserId
    nameWithType: ITicketApi.GetTicketsByUserId
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByUserId(System.String,System.Int32,System.Int32)
    name: GetTicketsByUserId
    nameWithType: ITicketApi.GetTicketsByUserId
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.GetTicketsByUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShop.RestApiClient.TicketApi.UpdateTicket*
  commentId: Overload:TicketShop.RestApiClient.TicketApi.UpdateTicket
  isExternal: false
  name: UpdateTicket
  nameWithType: TicketApi.UpdateTicket
  fullName: TicketShop.RestApiClient.TicketApi.UpdateTicket
- uid: TicketShop.RestApiClient.Interface.ITicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  commentId: M:TicketShop.RestApiClient.Interface.ITicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  parent: TicketShop.RestApiClient.Interface.ITicketApi
  isExternal: false
  name: UpdateTicket(Ticket)
  nameWithType: ITicketApi.UpdateTicket(Ticket)
  fullName: TicketShop.RestApiClient.Interface.ITicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
  spec.csharp:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
    name: UpdateTicket
    nameWithType: ITicketApi.UpdateTicket
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.UpdateTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketShop.RestApiClient.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketShop.RestApiClient.Model.Ticket
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketShop.RestApiClient.Interface.ITicketApi.UpdateTicket(TicketShop.RestApiClient.Model.Ticket)
    name: UpdateTicket
    nameWithType: ITicketApi.UpdateTicket
    fullName: TicketShop.RestApiClient.Interface.ITicketApi.UpdateTicket
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketShop.RestApiClient.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketShop.RestApiClient.Model.Ticket
  - name: )
    nameWithType: )
    fullName: )
