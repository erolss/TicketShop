### YamlMime:ManagedReference
items:
- uid: TicketShop.RestApiClient.Interface.IEventDateApi
  commentId: T:TicketShop.RestApiClient.Interface.IEventDateApi
  id: IEventDateApi
  parent: TicketShop.RestApiClient.Interface
  children:
  - TicketShop.RestApiClient.Interface.IEventDateApi.AddEventDate(TicketShop.RestApiClient.Model.EventDate)
  - TicketShop.RestApiClient.Interface.IEventDateApi.DeleteEventDate(System.Int32)
  - TicketShop.RestApiClient.Interface.IEventDateApi.FindEventDates(TicketShop.RestApiClient.Model.Search)
  - TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateByEventId(System.Int32)
  - TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateById(System.Int32)
  - TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDates(System.Int32,System.Int32)
  - TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDateById(System.Int32)
  - TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDates(System.Int32,System.Int32)
  - TicketShop.RestApiClient.Interface.IEventDateApi.GetSoldTicketCount(System.Int32)
  - TicketShop.RestApiClient.Interface.IEventDateApi.UpdateEventDate(TicketShop.RestApiClient.Model.EventDate)
  langs:
  - csharp
  - vb
  name: IEventDateApi
  nameWithType: IEventDateApi
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi
  type: Interface
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: IEventDateApi
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 6
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  syntax:
    content: public interface IEventDateApi
    content.vb: Public Interface IEventDateApi
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.AddEventDate(TicketShop.RestApiClient.Model.EventDate)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.AddEventDate(TicketShop.RestApiClient.Model.EventDate)
  id: AddEventDate(TicketShop.RestApiClient.Model.EventDate)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: AddEventDate(EventDate)
  nameWithType: IEventDateApi.AddEventDate(EventDate)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.AddEventDate(TicketShop.RestApiClient.Model.EventDate)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: AddEventDate
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 15
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nAdd event date to database\n"
  example: []
  syntax:
    content: EventDate AddEventDate(EventDate eventDate)
    parameters:
    - id: eventDate
      type: TicketShop.RestApiClient.Model.EventDate
      description: EventDate object
    return:
      type: TicketShop.RestApiClient.Model.EventDate
      description: An object representation of the created EventDate
    content.vb: Function AddEventDate(eventDate As EventDate) As EventDate
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.AddEventDate*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDates(System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDates(System.Int32,System.Int32)
  id: GetEventDates(System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: GetEventDates(Int32, Int32)
  nameWithType: IEventDateApi.GetEventDates(Int32, Int32)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDates(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetEventDates
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 23
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nGet Event Dates\n"
  example: []
  syntax:
    content: List<EventDate> GetEventDates(int offset = 0, int maxLimit = 20)
    parameters:
    - id: offset
      type: System.Int32
      description: Result set offset
    - id: maxLimit
      type: System.Int32
      description: Max result rows to fetch
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.EventDate}
      description: A list of object representations of EventDates
    content.vb: Function GetEventDates(offset As Integer = 0, maxLimit As Integer = 20) As List(Of EventDate)
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDates*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDates(System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDates(System.Int32,System.Int32)
  id: GetFullEventDates(System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: GetFullEventDates(Int32, Int32)
  nameWithType: IEventDateApi.GetFullEventDates(Int32, Int32)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDates(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetFullEventDates
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 31
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nGet Full Event Dates\n"
  example: []
  syntax:
    content: List<FullEventDate> GetFullEventDates(int offset = 0, int maxLimit = 20)
    parameters:
    - id: offset
      type: System.Int32
      description: Result set offset
    - id: maxLimit
      type: System.Int32
      description: Max result rows to fetch
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.FullEventDate}
      description: A list of object representations of FullEventDates
    content.vb: Function GetFullEventDates(offset As Integer = 0, maxLimit As Integer = 20) As List(Of FullEventDate)
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDates*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateById(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateById(System.Int32)
  id: GetEventDateById(System.Int32)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: GetEventDateById(Int32)
  nameWithType: IEventDateApi.GetEventDateById(Int32)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateById(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetEventDateById
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 38
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nGet EventDate by ID\n"
  example: []
  syntax:
    content: EventDate GetEventDateById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of EventDate
    return:
      type: TicketShop.RestApiClient.Model.EventDate
      description: An object representation of the EventDate
    content.vb: Function GetEventDateById(id As Integer) As EventDate
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateById*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateByEventId(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateByEventId(System.Int32)
  id: GetEventDateByEventId(System.Int32)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: GetEventDateByEventId(Int32)
  nameWithType: IEventDateApi.GetEventDateByEventId(Int32)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateByEventId(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetEventDateByEventId
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 45
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nGet EventDate by parent Event ID\n"
  example: []
  syntax:
    content: EventDate GetEventDateByEventId(int eventId)
    parameters:
    - id: eventId
      type: System.Int32
      description: ID of Parent Event
    return:
      type: TicketShop.RestApiClient.Model.EventDate
      description: An object representation of the EventDate
    content.vb: Function GetEventDateByEventId(eventId As Integer) As EventDate
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateByEventId*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDateById(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDateById(System.Int32)
  id: GetFullEventDateById(System.Int32)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: GetFullEventDateById(Int32)
  nameWithType: IEventDateApi.GetFullEventDateById(Int32)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDateById(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetFullEventDateById
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 52
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nGet the full EventDate w/ all data of venue, event\n"
  example: []
  syntax:
    content: FullEventDate GetFullEventDateById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of the EventDate
    return:
      type: TicketShop.RestApiClient.Model.FullEventDate
      description: An object representation of the EventDate
    content.vb: Function GetFullEventDateById(id As Integer) As FullEventDate
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDateById*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.UpdateEventDate(TicketShop.RestApiClient.Model.EventDate)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.UpdateEventDate(TicketShop.RestApiClient.Model.EventDate)
  id: UpdateEventDate(TicketShop.RestApiClient.Model.EventDate)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: UpdateEventDate(EventDate)
  nameWithType: IEventDateApi.UpdateEventDate(EventDate)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.UpdateEventDate(TicketShop.RestApiClient.Model.EventDate)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: UpdateEventDate
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 59
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nUpdate the EventDate\n"
  example: []
  syntax:
    content: EventDate UpdateEventDate(EventDate eventDate)
    parameters:
    - id: eventDate
      type: TicketShop.RestApiClient.Model.EventDate
      description: EventDate object
    return:
      type: TicketShop.RestApiClient.Model.EventDate
      description: An object representation of the updated EventDate
    content.vb: Function UpdateEventDate(eventDate As EventDate) As EventDate
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.UpdateEventDate*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.DeleteEventDate(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.DeleteEventDate(System.Int32)
  id: DeleteEventDate(System.Int32)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: DeleteEventDate(Int32)
  nameWithType: IEventDateApi.DeleteEventDate(Int32)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.DeleteEventDate(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: DeleteEventDate
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 66
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nDelete EventDate by ID\n"
  example: []
  syntax:
    content: bool DeleteEventDate(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of the EventDate
    return:
      type: System.Boolean
      description: bool, true if delete succeeded
    content.vb: Function DeleteEventDate(id As Integer) As Boolean
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.DeleteEventDate*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.FindEventDates(TicketShop.RestApiClient.Model.Search)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.FindEventDates(TicketShop.RestApiClient.Model.Search)
  id: FindEventDates(TicketShop.RestApiClient.Model.Search)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: FindEventDates(Search)
  nameWithType: IEventDateApi.FindEventDates(Search)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.FindEventDates(TicketShop.RestApiClient.Model.Search)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: FindEventDates
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 73
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nFind EventDates matching the search query\n"
  example: []
  syntax:
    content: List<EventDate> FindEventDates(Search query)
    parameters:
    - id: query
      type: TicketShop.RestApiClient.Model.Search
      description: Search object
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.EventDate}
      description: A list of object representations of EventDates matching the query
    content.vb: Function FindEventDates(query As Search) As List(Of EventDate)
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.FindEventDates*
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetSoldTicketCount(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.IEventDateApi.GetSoldTicketCount(System.Int32)
  id: GetSoldTicketCount(System.Int32)
  parent: TicketShop.RestApiClient.Interface.IEventDateApi
  langs:
  - csharp
  - vb
  name: GetSoldTicketCount(Int32)
  nameWithType: IEventDateApi.GetSoldTicketCount(Int32)
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetSoldTicketCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/IEventDateApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetSoldTicketCount
    path: src/RestApiClient/Interface/IEventDateApi.cs
    startLine: 81
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nGet number of available seats at EventDate\n"
  example: []
  syntax:
    content: int GetSoldTicketCount(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of EventDate
    return:
      type: System.Int32
      description: Number of available seats at EventDate
    content.vb: Function GetSoldTicketCount(id As Integer) As Integer
  overload: TicketShop.RestApiClient.Interface.IEventDateApi.GetSoldTicketCount*
references:
- uid: TicketShop.RestApiClient.Interface
  commentId: N:TicketShop.RestApiClient.Interface
  isExternal: false
  name: TicketShop.RestApiClient.Interface
  nameWithType: TicketShop.RestApiClient.Interface
  fullName: TicketShop.RestApiClient.Interface
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.AddEventDate*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.AddEventDate
  isExternal: false
  name: AddEventDate
  nameWithType: IEventDateApi.AddEventDate
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.AddEventDate
- uid: TicketShop.RestApiClient.Model.EventDate
  commentId: T:TicketShop.RestApiClient.Model.EventDate
  parent: TicketShop.RestApiClient.Model
  isExternal: false
  name: EventDate
  nameWithType: EventDate
  fullName: TicketShop.RestApiClient.Model.EventDate
- uid: TicketShop.RestApiClient.Model
  commentId: N:TicketShop.RestApiClient.Model
  isExternal: false
  name: TicketShop.RestApiClient.Model
  nameWithType: TicketShop.RestApiClient.Model
  fullName: TicketShop.RestApiClient.Model
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDates*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDates
  isExternal: false
  name: GetEventDates
  nameWithType: IEventDateApi.GetEventDates
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDates
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{TicketShop.RestApiClient.Model.EventDate}
  commentId: T:System.Collections.Generic.List{TicketShop.RestApiClient.Model.EventDate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<EventDate>
  nameWithType: List<EventDate>
  fullName: System.Collections.Generic.List<TicketShop.RestApiClient.Model.EventDate>
  nameWithType.vb: List(Of EventDate)
  fullName.vb: System.Collections.Generic.List(Of TicketShop.RestApiClient.Model.EventDate)
  name.vb: List(Of EventDate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketShop.RestApiClient.Model.EventDate
    name: EventDate
    nameWithType: EventDate
    fullName: TicketShop.RestApiClient.Model.EventDate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketShop.RestApiClient.Model.EventDate
    name: EventDate
    nameWithType: EventDate
    fullName: TicketShop.RestApiClient.Model.EventDate
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDates*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDates
  isExternal: false
  name: GetFullEventDates
  nameWithType: IEventDateApi.GetFullEventDates
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDates
- uid: System.Collections.Generic.List{TicketShop.RestApiClient.Model.FullEventDate}
  commentId: T:System.Collections.Generic.List{TicketShop.RestApiClient.Model.FullEventDate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<FullEventDate>
  nameWithType: List<FullEventDate>
  fullName: System.Collections.Generic.List<TicketShop.RestApiClient.Model.FullEventDate>
  nameWithType.vb: List(Of FullEventDate)
  fullName.vb: System.Collections.Generic.List(Of TicketShop.RestApiClient.Model.FullEventDate)
  name.vb: List(Of FullEventDate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketShop.RestApiClient.Model.FullEventDate
    name: FullEventDate
    nameWithType: FullEventDate
    fullName: TicketShop.RestApiClient.Model.FullEventDate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketShop.RestApiClient.Model.FullEventDate
    name: FullEventDate
    nameWithType: FullEventDate
    fullName: TicketShop.RestApiClient.Model.FullEventDate
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateById*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateById
  isExternal: false
  name: GetEventDateById
  nameWithType: IEventDateApi.GetEventDateById
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateById
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateByEventId*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateByEventId
  isExternal: false
  name: GetEventDateByEventId
  nameWithType: IEventDateApi.GetEventDateByEventId
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetEventDateByEventId
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDateById*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDateById
  isExternal: false
  name: GetFullEventDateById
  nameWithType: IEventDateApi.GetFullEventDateById
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetFullEventDateById
- uid: TicketShop.RestApiClient.Model.FullEventDate
  commentId: T:TicketShop.RestApiClient.Model.FullEventDate
  parent: TicketShop.RestApiClient.Model
  isExternal: false
  name: FullEventDate
  nameWithType: FullEventDate
  fullName: TicketShop.RestApiClient.Model.FullEventDate
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.UpdateEventDate*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.UpdateEventDate
  isExternal: false
  name: UpdateEventDate
  nameWithType: IEventDateApi.UpdateEventDate
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.UpdateEventDate
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.DeleteEventDate*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.DeleteEventDate
  isExternal: false
  name: DeleteEventDate
  nameWithType: IEventDateApi.DeleteEventDate
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.DeleteEventDate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.FindEventDates*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.FindEventDates
  isExternal: false
  name: FindEventDates
  nameWithType: IEventDateApi.FindEventDates
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.FindEventDates
- uid: TicketShop.RestApiClient.Model.Search
  commentId: T:TicketShop.RestApiClient.Model.Search
  parent: TicketShop.RestApiClient.Model
  isExternal: false
  name: Search
  nameWithType: Search
  fullName: TicketShop.RestApiClient.Model.Search
- uid: TicketShop.RestApiClient.Interface.IEventDateApi.GetSoldTicketCount*
  commentId: Overload:TicketShop.RestApiClient.Interface.IEventDateApi.GetSoldTicketCount
  isExternal: false
  name: GetSoldTicketCount
  nameWithType: IEventDateApi.GetSoldTicketCount
  fullName: TicketShop.RestApiClient.Interface.IEventDateApi.GetSoldTicketCount
