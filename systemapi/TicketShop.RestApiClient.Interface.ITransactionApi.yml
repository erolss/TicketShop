### YamlMime:ManagedReference
items:
- uid: TicketShop.RestApiClient.Interface.ITransactionApi
  commentId: T:TicketShop.RestApiClient.Interface.ITransactionApi
  id: ITransactionApi
  parent: TicketShop.RestApiClient.Interface
  children:
  - TicketShop.RestApiClient.Interface.ITransactionApi.AddTransaction(TicketShop.RestApiClient.Model.Transaction)
  - TicketShop.RestApiClient.Interface.ITransactionApi.DeleteTransactionById(System.Int32)
  - TicketShop.RestApiClient.Interface.ITransactionApi.FindTransactions(TicketShop.RestApiClient.Model.Search)
  - TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactionById(System.Int32)
  - TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactions(System.Int32,System.Int32)
  - TicketShop.RestApiClient.Interface.ITransactionApi.UpdateTransaction(TicketShop.RestApiClient.Model.Transaction)
  langs:
  - csharp
  - vb
  name: ITransactionApi
  nameWithType: ITransactionApi
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi
  type: Interface
  source:
    remote:
      path: src/RestApiClient/Interface/ITransactionApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: ITransactionApi
    path: src/RestApiClient/Interface/ITransactionApi.cs
    startLine: 7
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  syntax:
    content: public interface ITransactionApi
    content.vb: Public Interface ITransactionApi
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactions(System.Int32,System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactions(System.Int32,System.Int32)
  id: GetTransactions(System.Int32,System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITransactionApi
  langs:
  - csharp
  - vb
  name: GetTransactions(Int32, Int32)
  nameWithType: ITransactionApi.GetTransactions(Int32, Int32)
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactions(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/ITransactionApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetTransactions
    path: src/RestApiClient/Interface/ITransactionApi.cs
    startLine: 15
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nGet transactions from db\n"
  example: []
  syntax:
    content: List<Transaction> GetTransactions(int offset = 0, int maxLimit = 20)
    parameters:
    - id: offset
      type: System.Int32
      description: result set offset
    - id: maxLimit
      type: System.Int32
      description: Max rows to fetch
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.Transaction}
      description: A list of object representations of Transactions
    content.vb: Function GetTransactions(offset As Integer = 0, maxLimit As Integer = 20) As List(Of Transaction)
  overload: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactions*
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactionById(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactionById(System.Int32)
  id: GetTransactionById(System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITransactionApi
  langs:
  - csharp
  - vb
  name: GetTransactionById(Int32)
  nameWithType: ITransactionApi.GetTransactionById(Int32)
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactionById(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/ITransactionApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: GetTransactionById
    path: src/RestApiClient/Interface/ITransactionApi.cs
    startLine: 21
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nGet Transaction by Id\n"
  example: []
  syntax:
    content: Transaction GetTransactionById(int transactionId)
    parameters:
    - id: transactionId
      type: System.Int32
      description: ID of Transaction
    return:
      type: TicketShop.RestApiClient.Model.Transaction
      description: An object representation of the Transaction
    content.vb: Function GetTransactionById(transactionId As Integer) As Transaction
  overload: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactionById*
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.AddTransaction(TicketShop.RestApiClient.Model.Transaction)
  commentId: M:TicketShop.RestApiClient.Interface.ITransactionApi.AddTransaction(TicketShop.RestApiClient.Model.Transaction)
  id: AddTransaction(TicketShop.RestApiClient.Model.Transaction)
  parent: TicketShop.RestApiClient.Interface.ITransactionApi
  langs:
  - csharp
  - vb
  name: AddTransaction(Transaction)
  nameWithType: ITransactionApi.AddTransaction(Transaction)
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.AddTransaction(TicketShop.RestApiClient.Model.Transaction)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/ITransactionApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: AddTransaction
    path: src/RestApiClient/Interface/ITransactionApi.cs
    startLine: 28
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nAdd new Transaction\n"
  example: []
  syntax:
    content: Transaction AddTransaction(Transaction transaction)
    parameters:
    - id: transaction
      type: TicketShop.RestApiClient.Model.Transaction
      description: An object representation of the Transaction to create in Database
    return:
      type: TicketShop.RestApiClient.Model.Transaction
      description: An object representation of the created Transaction
    content.vb: Function AddTransaction(transaction As Transaction) As Transaction
  overload: TicketShop.RestApiClient.Interface.ITransactionApi.AddTransaction*
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.UpdateTransaction(TicketShop.RestApiClient.Model.Transaction)
  commentId: M:TicketShop.RestApiClient.Interface.ITransactionApi.UpdateTransaction(TicketShop.RestApiClient.Model.Transaction)
  id: UpdateTransaction(TicketShop.RestApiClient.Model.Transaction)
  parent: TicketShop.RestApiClient.Interface.ITransactionApi
  langs:
  - csharp
  - vb
  name: UpdateTransaction(Transaction)
  nameWithType: ITransactionApi.UpdateTransaction(Transaction)
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.UpdateTransaction(TicketShop.RestApiClient.Model.Transaction)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/ITransactionApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: UpdateTransaction
    path: src/RestApiClient/Interface/ITransactionApi.cs
    startLine: 35
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nUpdate a transaction by Id\n"
  example: []
  syntax:
    content: Transaction UpdateTransaction(Transaction transaction)
    parameters:
    - id: transaction
      type: TicketShop.RestApiClient.Model.Transaction
      description: Transaction Object
    return:
      type: TicketShop.RestApiClient.Model.Transaction
      description: An object representation of the updated Transaction
    content.vb: Function UpdateTransaction(transaction As Transaction) As Transaction
  overload: TicketShop.RestApiClient.Interface.ITransactionApi.UpdateTransaction*
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.DeleteTransactionById(System.Int32)
  commentId: M:TicketShop.RestApiClient.Interface.ITransactionApi.DeleteTransactionById(System.Int32)
  id: DeleteTransactionById(System.Int32)
  parent: TicketShop.RestApiClient.Interface.ITransactionApi
  langs:
  - csharp
  - vb
  name: DeleteTransactionById(Int32)
  nameWithType: ITransactionApi.DeleteTransactionById(Int32)
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.DeleteTransactionById(System.Int32)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/ITransactionApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: DeleteTransactionById
    path: src/RestApiClient/Interface/ITransactionApi.cs
    startLine: 40
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nDelete a transaction\n"
  example: []
  syntax:
    content: bool DeleteTransactionById(int transactionId)
    parameters:
    - id: transactionId
      type: System.Int32
      description: Transaction Id
    return:
      type: System.Boolean
    content.vb: Function DeleteTransactionById(transactionId As Integer) As Boolean
  overload: TicketShop.RestApiClient.Interface.ITransactionApi.DeleteTransactionById*
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.FindTransactions(TicketShop.RestApiClient.Model.Search)
  commentId: M:TicketShop.RestApiClient.Interface.ITransactionApi.FindTransactions(TicketShop.RestApiClient.Model.Search)
  id: FindTransactions(TicketShop.RestApiClient.Model.Search)
  parent: TicketShop.RestApiClient.Interface.ITransactionApi
  langs:
  - csharp
  - vb
  name: FindTransactions(Search)
  nameWithType: ITransactionApi.FindTransactions(Search)
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.FindTransactions(TicketShop.RestApiClient.Model.Search)
  type: Method
  source:
    remote:
      path: src/RestApiClient/Interface/ITransactionApi.cs
      branch: features/ticketshop
      repo: https://github.com/erolss/TicketShop.git
    id: FindTransactions
    path: src/RestApiClient/Interface/ITransactionApi.cs
    startLine: 54
  assemblies:
  - RestApiClient
  namespace: TicketShop.RestApiClient.Interface
  summary: "\nFind transactions matching the query\n"
  example: []
  syntax:
    content: List<Transaction> FindTransactions(Search query)
    parameters:
    - id: query
      type: TicketShop.RestApiClient.Model.Search
      description: Search object
    return:
      type: System.Collections.Generic.List{TicketShop.RestApiClient.Model.Transaction}
      description: A list of object representations of Transactions
    content.vb: Function FindTransactions(query As Search) As List(Of Transaction)
  overload: TicketShop.RestApiClient.Interface.ITransactionApi.FindTransactions*
references:
- uid: TicketShop.RestApiClient.Interface
  commentId: N:TicketShop.RestApiClient.Interface
  isExternal: false
  name: TicketShop.RestApiClient.Interface
  nameWithType: TicketShop.RestApiClient.Interface
  fullName: TicketShop.RestApiClient.Interface
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactions*
  commentId: Overload:TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactions
  isExternal: false
  name: GetTransactions
  nameWithType: ITransactionApi.GetTransactions
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{TicketShop.RestApiClient.Model.Transaction}
  commentId: T:System.Collections.Generic.List{TicketShop.RestApiClient.Model.Transaction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Transaction>
  nameWithType: List<Transaction>
  fullName: System.Collections.Generic.List<TicketShop.RestApiClient.Model.Transaction>
  nameWithType.vb: List(Of Transaction)
  fullName.vb: System.Collections.Generic.List(Of TicketShop.RestApiClient.Model.Transaction)
  name.vb: List(Of Transaction)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketShop.RestApiClient.Model.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: TicketShop.RestApiClient.Model.Transaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketShop.RestApiClient.Model.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: TicketShop.RestApiClient.Model.Transaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactionById*
  commentId: Overload:TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactionById
  isExternal: false
  name: GetTransactionById
  nameWithType: ITransactionApi.GetTransactionById
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.GetTransactionById
- uid: TicketShop.RestApiClient.Model.Transaction
  commentId: T:TicketShop.RestApiClient.Model.Transaction
  parent: TicketShop.RestApiClient.Model
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: TicketShop.RestApiClient.Model.Transaction
- uid: TicketShop.RestApiClient.Model
  commentId: N:TicketShop.RestApiClient.Model
  isExternal: false
  name: TicketShop.RestApiClient.Model
  nameWithType: TicketShop.RestApiClient.Model
  fullName: TicketShop.RestApiClient.Model
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.AddTransaction*
  commentId: Overload:TicketShop.RestApiClient.Interface.ITransactionApi.AddTransaction
  isExternal: false
  name: AddTransaction
  nameWithType: ITransactionApi.AddTransaction
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.AddTransaction
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.UpdateTransaction*
  commentId: Overload:TicketShop.RestApiClient.Interface.ITransactionApi.UpdateTransaction
  isExternal: false
  name: UpdateTransaction
  nameWithType: ITransactionApi.UpdateTransaction
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.UpdateTransaction
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.DeleteTransactionById*
  commentId: Overload:TicketShop.RestApiClient.Interface.ITransactionApi.DeleteTransactionById
  isExternal: false
  name: DeleteTransactionById
  nameWithType: ITransactionApi.DeleteTransactionById
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.DeleteTransactionById
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TicketShop.RestApiClient.Interface.ITransactionApi.FindTransactions*
  commentId: Overload:TicketShop.RestApiClient.Interface.ITransactionApi.FindTransactions
  isExternal: false
  name: FindTransactions
  nameWithType: ITransactionApi.FindTransactions
  fullName: TicketShop.RestApiClient.Interface.ITransactionApi.FindTransactions
- uid: TicketShop.RestApiClient.Model.Search
  commentId: T:TicketShop.RestApiClient.Model.Search
  parent: TicketShop.RestApiClient.Model
  isExternal: false
  name: Search
  nameWithType: Search
  fullName: TicketShop.RestApiClient.Model.Search
